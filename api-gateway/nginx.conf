# ========================================
# DEFINIR UPSTREAM (Dónde están los servicios)
# ========================================

# Servicio de Usuarios
upstream usuarios_backend {
    server usuarios-service:8000;  # Nombre del contenedor:puerto
}

# Servicio de Productos
upstream productos_backend {
    server productos-service:8000;
}

# Servicio de Pedidos
upstream pedidos_backend {
    server pedidos-service:8000;
}

# Frontend (React)
upstream frontend {
    server frontend:5173;  # Vite corre en puerto 5173
}

# ========================================
# SERVIDOR NGINX
# ========================================
server {
    listen 80;                          # Escucha en puerto 80
    server_name _;                      # Cualquier nombre de servidor
    client_max_body_size 10M;           # Máximo tamaño de archivo: 10MB

    # ========================================
    # HEADERS DE CORS (Para que el frontend pueda hablar con el backend)
    # ========================================
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;

    # Manejo de peticiones preflight (OPTIONS)
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # ========================================
    # 1️⃣ RUTA RAÍZ (/) → FRONTEND
    # ========================================
    location / {
        proxy_pass http://frontend;                    # Envía a frontend:5173
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # 2️⃣ RUTAS DE AUTENTICACIÓN → USUARIOS
    # ========================================
    location /api/auth/ {
        proxy_pass http://usuarios_backend;           # Envía a usuarios-service:8000
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # ========================================
    # 3️⃣ RUTAS DE USUARIOS → USUARIOS SERVICE
    # ========================================
    location /api/users/ {
        proxy_pass http://usuarios_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # 4️⃣ RUTAS DE PRODUCTOS → PRODUCTOS SERVICE
    # ========================================
    location /api/products/ {
        proxy_pass http://productos_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/categories/ {
        proxy_pass http://productos_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # 5️⃣ RUTAS DE PEDIDOS → PEDIDOS SERVICE
    # ========================================
    location /api/orders/ {
        proxy_pass http://pedidos_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/cart/ {
        proxy_pass http://pedidos_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # CHEQUEO DE SALUD (Health Check)
    # ========================================
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ========================================
    # CACHEO DE ARCHIVOS ESTÁTICOS
    # ========================================
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_cache_valid 200 10d;
        add_header Cache-Control "public, max-age=864000";
    }

    # ========================================
    # PÁGINA DE ERROR 502/503
    # ========================================
    error_page 502 503 /50x.html;
    location = /50x.html {
        return 200 '{"error": "Service temporarily unavailable"}';
        add_header Content-Type application/json;
    }
}